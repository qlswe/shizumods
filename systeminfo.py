import logging
import psutil
import datetime
from pyrogram import Client, types, enums
from .. import loader, utils

class SysInfo(loader.Module):  # –£–±—Ä–∞–ª –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
    """–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ —Å –ø–æ–º–æ—â—å—é psutil."""

    strings = {
        "wait": "‚è≥ <b>–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...</b>",
        "info": "üíª <b>–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n{}",
    }

    async def sysinfo(self, app: Client, message: types.Message):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
        msg_ = await message.answer(self.strings["wait"])

        try:
            info = {
                "CPU –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ": f"{psutil.cpu_percent()}%",
                "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å": f"{psutil.virtual_memory().percent}%",
                "–û–±—â–∏–π –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏": f"{psutil.virtual_memory().total / (1024**3):.2f} –ì–ë",
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏": f"{psutil.virtual_memory().used / (1024**3):.2f} –ì–ë",
                "–°–≤–æ–±–æ–¥–Ω–æ –ø–∞–º—è—Ç–∏": f"{psutil.virtual_memory().available / (1024**3):.2f} –ì–ë",
                "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã": str(datetime.timedelta(seconds=int(psutil.boot_time())))
            }

            output = "\n".join([f"<b>{key}:</b> {value}" for key, value in info.items()])
            await msg_.edit(self.strings["info"].format(output))
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
            await msg_.edit("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ.")
